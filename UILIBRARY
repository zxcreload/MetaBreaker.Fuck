local Library = {}
local NeverloseVersion = "v1.1A."
local TweenService, InputService = game:GetService("TweenService"), game:GetService("UserInputService")

-- Clear existing Neverlose GUI
for _, v in next, game.CoreGui:GetChildren() do
    if v:IsA("ScreenGui") and v.Name == "Neverlose" then v:Destroy() end
end

local Mouse = game.Players.LocalPlayer:GetMouse()

-- Notification function
local function Notify(title, text)
    game:GetService("StarterGui"):SetCore("SendNotification", {Title = title, Text = text, Duration = 5})
end

-- Draggable frame functionality
local function Dragify(frame, parent)
    parent = parent or frame
    local dragging, dragInput, mousePos, framePos
    frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging, mousePos, framePos = true, input.Position, parent.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then dragging = false end
            end)
        end
    end)
    frame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then dragInput = input end
    end)
    InputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - mousePos
            parent.Position = UDim2.new(framePos.X.Scale, framePos.X.Offset + delta.X, framePos.Y.Scale, framePos.Y.Offset + delta.Y)
        end
    end)
end

-- Round number to nearest bracket
local function round(num, bracket)
    bracket = bracket or 1
    local a = math.floor(num/bracket + (math.sign(num) * 0.5)) * bracket
    return a < 0 and a + bracket or a
end

-- Button hover effect
local function buttoneffect(options)
    pcall(function()
        options.entered.MouseEnter:Connect(function()
            if options.frame.TextColor3 ~= Color3.fromRGB(234, 239, 246) then
                TweenService:Create(options.frame, TweenInfo.new(0.06, Enum.EasingStyle.Quart, Enum.EasingDirection.In), {TextColor3 = Color3.fromRGB(234, 239, 245)}):Play()
            end
        end)
        options.entered.MouseLeave:Connect(function()
            if options.frame.TextColor3 ~= Color3.fromRGB(157, 171, 182) and options.frame.TextColor3 ~= Color3.fromRGB(234, 239, 246) then
                TweenService:Create(options.frame, TweenInfo.new(0.06, Enum.EasingStyle.Quart, Enum.EasingDirection.In), {TextColor3 = Color3.fromRGB(157, 171, 182)}):Play()
            end
        end)
    end)
end

-- Button click effect
local function clickEffect(options)
    options.button.MouseButton1Click:Connect(function()
        local new, revert = options.button.TextSize - tonumber(options.amount), options.button.TextSize
        TweenService:Create(options.button, TweenInfo.new(0.15, Enum.EasingStyle.Elastic, Enum.EasingDirection.Out), {TextSize = new}):Play()
        wait(0.1)
        TweenService:Create(options.button, TweenInfo.new(0.1, Enum.EasingStyle.Elastic, Enum.EasingDirection.Out), {TextSize = revert}):Play()
    end)
end

-- Toggle GUI visibility
function Library:Toggle(value)
    local gui = game.CoreGui:FindFirstChild("Neverlose")
    if not gui then return end
    gui.Enabled = type(value) == "boolean" and value or not gui.Enabled
end

-- Create main window
function Library:Window(options)
    options.text = options.text or "NEVERLOSE"
    local SG = Instance.new("ScreenGui", game.CoreGui)
    SG.Name = "Neverlose"
    
    local Body = Instance.new("Frame", SG)
    Body.BackgroundColor3, Body.BorderSizePixel, Body.Position, Body.Size, Body.AnchorPoint = Color3.fromRGB(9, 8, 13), 0, UDim2.new(0.465730786, 0, 0.5, 0), UDim2.new(0, 658, 0, 516), Vector2.new(0.5, 0.5)
    Instance.new("UICorner", Body).CornerRadius = UDim.new(0, 4)
    Dragify(Body)
    
    local SideBar = Instance.new("Frame", Body)
    SideBar.BackgroundColor3, SideBar.BorderSizePixel, SideBar.Size = Color3.fromRGB(26, 36, 48), 0, UDim2.new(0, 187, 0, 516)
    Instance.new("UICorner", SideBar).CornerRadius = UDim.new(0, 4)
    Instance.new("Frame", SideBar).BackgroundColor3, Instance.new("Frame", SideBar).BorderSizePixel, Instance.new("Frame", SideBar).Position, Instance.new("Frame", SideBar).Size = Color3.fromRGB(15, 23, 36), 0, UDim2.new(0.99490571, 0, 0, 0), UDim2.new(0, 3, 0, 516)
    
    local TopBar = Instance.new("Frame", Body)
    TopBar.BackgroundColor3, TopBar.BackgroundTransparency, TopBar.BorderSizePixel, TopBar.Position, TopBar.Size = Color3.fromRGB(9, 8, 13), 1, 0, UDim2.new(0.25166446, 0, 0, 0), UDim2.new(0, 562, 0, 49)
    Instance.new("Frame", TopBar).BackgroundColor3, Instance.new("Frame", TopBar).BorderSizePixel, Instance.new("Frame", TopBar).Position, Instance.new("Frame", TopBar).Size = Color3.fromRGB(15, 23, 36), 0, UDim2.new(0.0400355868, 0, 1, 0), UDim2.new(0, 469, 0, 3)
    
    local Title = Instance.new("TextLabel", SideBar)
    Title.BackgroundTransparency, Title.BorderSizePixel, Title.Position, Title.Size, Title.Font, Title.Text, Title.TextColor3, Title.TextSize, Title.TextWrapped = 1, 0, UDim2.new(0.0614973232, 0, 0.0213178284, 0), UDim2.new(0, 162, 0, 26), Enum.Font.ArialBold, options.text, Color3.fromRGB(234, 239, 245), 28, true
    
    local allPages = Instance.new("Frame", Body)
    allPages.BackgroundTransparency, allPages.BorderSizePixel, allPages.Position, allPages.Size = 1, 0, UDim2.new(0.29508087, 0, 0.100775197, 0), UDim2.new(0, 463, 0, 464)
    
    local tabContainer = Instance.new("Frame", SideBar)
    tabContainer.BackgroundTransparency, tabContainer.BorderSizePixel, tabContainer.Position, tabContainer.Size = 1, 0, UDim2.new(0, 0, 0.100775197, 0), UDim2.new(0, 187, 0, 464)
    
    local tabsections = {}
    
    function tabsections:TabSection(options)
        options.text = options.text or "Tab Section"
        local tabSection = Instance.new("Frame", tabContainer)
        tabSection.BackgroundTransparency, tabSection.BorderSizePixel, tabSection.Size = 1, 0, UDim2.new(0, 189, 0, 22)
        Instance.new("UIListLayout", tabContainer)
        
        local tabSectionLabel = Instance.new("TextLabel", tabSection)
        tabSectionLabel.BackgroundTransparency, tabSectionLabel.BorderSizePixel, tabSectionLabel.Size, tabSectionLabel.Font, tabSectionLabel.Text, tabSectionLabel.TextColor3, tabSectionLabel.TextSize, tabSectionLabel.TextXAlignment = 1, 0, UDim2.new(0, 190, 0, 22), Enum.Font.Gotham, "     " .. options.text, Color3.fromRGB(79, 107, 126), 17, Enum.TextXAlignment.Left
        
        local tabSectionLayout = Instance.new("UIListLayout", tabSection)
        tabSectionLayout.HorizontalAlignment, tabSectionLayout.SortOrder, tabSectionLayout.Padding = Enum.HorizontalAlignment.Center, Enum.SortOrder.LayoutOrder, UDim.new(0, 7)
        
        local function ResizeTS(num) tabSection.Size += UDim2.new(0, 0, 0, num) end
        
        local tabs = {}
        
        function tabs:Tab(options)
            options.text, options.icon = options.text or "New Tab", options.icon or "rbxassetid://7999345313"
            local tabButton = Instance.new("TextButton", tabSection)
            tabButton.BackgroundColor3, tabButton.BorderSizePixel, tabButton.Size, tabButton.AutoButtonColor, tabButton.Font, tabButton.Text, tabButton.TextColor3, tabButton.TextSize, tabButton.BackgroundTransparency, tabButton.TextXAlignment = Color3.fromRGB(13, 57, 84), 0, UDim2.new(0, 165, 0, 30), false, Enum.Font.GothamSemibold, "         " .. options.text, Color3.fromRGB(234, 239, 245), 14, 1, Enum.TextXAlignment.Left
            Instance.new("UICorner", tabButton).CornerRadius = UDim.new(0, 4)
            
            local tabIcon = Instance.new("ImageLabel", tabButton)
            tabIcon.BackgroundTransparency, tabIcon.BorderSizePixel, tabIcon.Position, tabIcon.Size, tabIcon.Image, tabIcon.ImageColor3 = 1, 0, UDim2.new(0.0408859849, 0, 0.133333355, 0), UDim2.new(0, 21, 0, 21), options.icon, Color3.fromRGB(43, 154, 198)
            
            local newPage = Instance.new("ScrollingFrame", allPages)
            newPage.Visible, newPage.BackgroundTransparency, newPage.BorderSizePixel, newPage.ClipsDescendants, newPage.Position, newPage.Size, newPage.ScrollBarThickness, newPage.CanvasSize = false, 1, 0, false, UDim2.new(0.021598272, 0, 0.0237068962, 0), UDim2.new(0, 442, 0, 440), 4, UDim2.new(0, 0, 0, 0)
            
            local pageLayout = Instance.new("UIGridLayout", newPage)
            pageLayout.SortOrder, pageLayout.CellPadding, pageLayout.CellSize = Enum.SortOrder.LayoutOrder, UDim2.new(0, 12, 0, 12), UDim2.new(0, 215, 0, -10)
            pageLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
                newPage.CanvasSize = UDim2.new(0, 0, 0, pageLayout.AbsoluteContentSize.Y)
            end)
            
            tabButton.MouseButton1Click:Connect(function()
                for _, v in next, allPages:GetChildren() do v.Visible = false end
                newPage.Visible = true
                for _, v in next, SideBar:GetDescendants() do
                    if v:IsA("TextButton") then
                        TweenService:Create(v, TweenInfo.new(0.06, Enum.EasingStyle.Quart, Enum.EasingDirection.In), {BackgroundTransparency = 1}):Play()
                    end
                end
                TweenService:Create(tabButton, TweenInfo.new(0.06, Enum.EasingStyle.Quart, Enum.EasingDirection.In), {BackgroundTransparency = 0}):Play()
            end)
            
            ResizeTS(50)
            local sections = {}
            
            function sections:Section(options)
                options.text = options.text or "Section"
                local sectionFrame = Instance.new("Frame", newPage)
                sectionFrame.BackgroundColor3, sectionFrame.BorderSizePixel, sectionFrame.Size = Color3.fromRGB(0, 15, 30), 0, UDim2.new(0, 215, 0, 134)
                Instance.new("UICorner", sectionFrame).CornerRadius = UDim.new(0, 4)
                
                local sectionLabel = Instance.new("TextLabel", sectionFrame)
                sectionLabel.BackgroundTransparency, sectionLabel.BorderSizePixel, sectionLabel.Position, sectionLabel.Size, sectionLabel.Font, sectionLabel.Text, sectionLabel.TextColor3, sectionLabel.TextSize, sectionLabel.TextXAlignment = 1, 0, UDim2.new(0.0121902823, 0, 0, 0), UDim2.new(0, 213, 0, 25), Enum.Font.GothamSemibold, "   " .. options.text, Color3.fromRGB(234, 239, 245), 14, Enum.TextXAlignment.Left
                
                local sectionLayout = Instance.new("UIListLayout", sectionFrame)
                sectionLayout.HorizontalAlignment, sectionLayout.SortOrder, sectionLayout.Padding = Enum.HorizontalAlignment.Center, Enum.SortOrder.LayoutOrder, UDim.new(0, 2)
                
                local sLine = Instance.new("TextLabel", sectionFrame)
                sLine.BackgroundColor3, sLine.BorderSizePixel, sLine.Position, sLine.Size, sLine.Font, sLine.Text, sLine.TextColor3, sLine.TextSize = Color3.fromRGB(13, 28, 44), 0, UDim2.new(0.0255813953, 0, 0.41538462, 0), UDim2.new(0, 202, 0, 3), Enum.Font.SourceSans, "", Color3.fromRGB(0, 0, 0), 0
                
                local sectionSizeConstraint = Instance.new("UISizeConstraint", sectionFrame)
                sectionSizeConstraint.MinSize = Vector2.new(215, 35)
                
                local function Resize(num) sectionSizeConstraint.MinSize += Vector2.new(0, num) end
                
                local elements = {}
                
                function elements:Button(options)
                    if not options.text or not options.callback then Notify("Button", "Missing arguments!") return end
                    local TextButton = Instance.new("TextButton", sectionFrame)
                    TextButton.BackgroundColor3, TextButton.BorderSizePixel, TextButton.Size, TextButton.AutoButtonColor, TextButton.Text, TextButton.Font, TextButton.TextColor3, TextButton.TextSize, TextButton.BackgroundTransparency = Color3.fromRGB(13, 57, 84), 0, UDim2.new(0, 200, 0, 22), false, options.text, Enum.Font.Gotham, Color3.fromRGB(157, 171, 182), 14, 1
                    buttoneffect({frame = TextButton, entered = TextButton})
                    clickEffect({button = TextButton, amount = 5})
                    TextButton.MouseButton1Click:Connect(options.callback)
                    Resize(25)
                end
                
                function elements:Toggle(options)
                    if not options.text or not options.callback then Notify("Toggle", "Missing arguments!") return end
                    local toggleLabel = Instance.new("TextLabel", sectionFrame)
                    toggleLabel.BackgroundTransparency, toggleLabel.Position, toggleLabel.Size, toggleLabel.Font, toggleLabel.Text, toggleLabel.TextColor3, toggleLabel.TextSize, toggleLabel.TextXAlignment = 1, UDim2.new(0.0348837227, 0, 0.965517223, 0), UDim2.new(0, 200, 0, 22), Enum.Font.Gotham, " " .. options.text, Color3.fromRGB(157, 171, 182), 14, Enum.TextXAlignment.Left
                    buttoneffect({frame = toggleLabel, entered = toggleLabel})
                    
                    local toggleFrame = Instance.new("TextButton", toggleLabel)
                    toggleFrame.BackgroundColor3, toggleFrame.BorderSizePixel, toggleFrame.AnchorPoint, toggleFrame.Position, toggleFrame.Size, toggleFrame.AutoButtonColor, toggleFrame.Font, toggleFrame.Text, toggleFrame.TextColor3, toggleFrame.TextSize = Color3.fromRGB(4, 4, 11), 0, Vector2.new(0.5, 0.5), UDim2.new(0.9, 0, 0.5, 0), UDim2.new(0, 38, 0, 18), false, Enum.Font.SourceSans, "", Color3.fromRGB(0, 0, 0), 14
                    Instance.new("UICorner", toggleFrame).CornerRadius = UDim.new(0, 50)
                    
                    local toggleButton = Instance.new("TextButton", toggleFrame)
                    toggleButton.BackgroundColor3, toggleButton.BorderSizePixel, toggleButton.AnchorPoint, toggleButton.Position, toggleButton.Size, toggleButton.AutoButtonColor, toggleButton.Font, toggleButton.Text, toggleButton.TextColor3, toggleButton.TextSize = Color3.fromRGB(77, 77, 77), 0, Vector2.new(0.5, 0.5), UDim2.new(0.25, 0, 0.5, 0), UDim2.new(0, 16, 0, 16), false, Enum.Font.SourceSans, "", Color3.fromRGB(0, 0, 0), 14
                    Instance.new("UICorner", toggleButton).CornerRadius = UDim.new(0, 50)
                    
                    local State = options.state or false
                    if options.state then
                        toggleButton.Position, toggleLabel.TextColor3, toggleButton.BackgroundColor3, toggleFrame.BackgroundColor3 = UDim2.new(0.74, 0, 0.5, 0), Color3.fromRGB(234, 239, 246), Color3.fromRGB(2, 162, 243), Color3.fromRGB(2, 23, 49)
                    end
                    
                    local function PerformToggle()
                        State = not State
                        options.callback(State)
                        TweenService:Create(toggleButton, TweenInfo.new(0.2, Enum.EasingStyle.Quart, Enum.EasingDirection.InOut), {Position = State and UDim2.new(0.74, 0, 0.5, 0) or UDim2.new(0.25, 0, 0.5, 0)}):Play()
                        TweenService:Create(toggleLabel, TweenInfo.new(0.06, Enum.EasingStyle.Quart, Enum.EasingDirection.InOut), {TextColor3 = State and Color3.fromRGB(234, 239, 246) or Color3.fromRGB(157, 171, 182)}):Play()
                        TweenService:Create(toggleButton, TweenInfo.new(0.06, Enum.EasingStyle.Quart, Enum.EasingDirection.InOut), {BackgroundColor3 = State and Color3.fromRGB(2, 162, 243) or Color3.fromRGB(77, 77, 77)}):Play()
                        TweenService:Create(toggleFrame, TweenInfo.new(0.06, Enum.EasingStyle.Quart, Enum.EasingDirection.InOut), {BackgroundColor3 = State and Color3.fromRGB(2, 23, 49) or Color3.fromRGB(4, 4, 11)}):Play()
                    end
                    
                    toggleFrame.MouseButton1Click:Connect(PerformToggle)
                    toggleButton.MouseButton1Click:Connect(PerformToggle)
                    Resize(25)
                end
                
                function elements:Slider(options)
                    if not options.text or not options.min or not options.max or not options.callback then Notify("Slider", "Missing arguments!") return end
                    local Slider = Instance.new("Frame", sectionFrame)
                    Slider.BackgroundTransparency, Slider.Size = 1, UDim2.new(0, 200, 0, 22)
                    buttoneffect({frame = Slider, entered = Slider})
                    
                    local sliderLabel = Instance.new("TextLabel", Slider)
                    sliderLabel.AnchorPoint, sliderLabel.BackgroundTransparency, sliderLabel.Position, sliderLabel.Size, sliderLabel.Font, sliderLabel.Text, sliderLabel.TextColor3, sliderLabel.TextSize, sliderLabel.TextXAlignment = Vector2.new(0.5, 0.5), 1, UDim2.new(0.2, 0, 0.5, 0), UDim2.new(0, 77, 0, 22), Enum.Font.Gotham, " " .. options.text, Color3.fromRGB(157, 171, 182), 14, Enum.TextXAlignment.Left
                    sliderLabel:GetPropertyChangedSignal("TextBounds"):Connect(function()
                        sliderLabel.TextScaled = sliderLabel.TextBounds.X > 75
                    end)
                    
                    local sliderFrame = Instance.new("TextButton", sliderLabel)
                    sliderFrame.BackgroundColor3, sliderFrame.BorderSizePixel, sliderFrame.AnchorPoint, sliderFrame.Position, sliderFrame.Size, sliderFrame.Text, sliderFrame.AutoButtonColor = Color3.fromRGB(29, 87, 118), 0, Vector2.new(0.5, 0.5), UDim2.new(1.6, 0, 0.5, 0), UDim2.new(0, 72, 0, 2), "", false
                    
                    local sliderBall = Instance.new("TextButton", sliderFrame)
                    sliderBall.AnchorPoint, sliderBall.BackgroundColor3, sliderBall.BorderSizePixel, sliderBall.Position, sliderBall.Size, sliderBall.AutoButtonColor, sliderBall.Font, sliderBall.Text, sliderBall.TextColor3, sliderBall.TextSize = Vector2.new(0.5, 0.5), Color3.fromRGB(67, 136, 231), 0, UDim2.new(0, 0, 0.5, 0), UDim2.new(0, 14, 0, 14), false, Enum.Font.SourceSans, "", Color3.fromRGB(0, 0, 0), 14
                    Instance.new("UICorner", sliderBall).CornerRadius = UDim.new(0, 50)
                    
                    local sliderTextBox = Instance.new("TextBox", sliderLabel)
                    sliderTextBox.BackgroundColor3, sliderTextBox.AnchorPoint, sliderTextBox.Position, sliderTextBox.Size, sliderTextBox.Font, sliderTextBox.Text, sliderTextBox.TextColor3, sliderTextBox.TextSize, sliderTextBox.TextWrapped = Color3.fromRGB(1, 7, 17), Vector2.new(0.5, 0.5), UDim2.new(2.4, 0, 0.5, 0), UDim2.new(0, 31, 0, 15), Enum.Font.Gotham, tostring(options.min), Color3.fromRGB(234, 239, 245), 11, true
                    
                    local Value, Held, percentage, step = nil, false, 0, 0.01
                    local function snap(number, factor) return factor == 0 and number or math.floor(number/factor+0.5)*factor end
                    
                    InputService.InputEnded:Connect(function() Held = false end)
                    sliderFrame.MouseButton1Down:Connect(function() Held = true end)
                    sliderBall.MouseButton1Down:Connect(function() Held = true end)
                    
                    game:GetService("RunService").RenderStepped:Connect(function()
                        if Held then
                            local MousePos, FrameSize, FramePos = InputService:GetMouseLocation().X, sliderFrame.AbsoluteSize.X, sliderFrame.AbsolutePosition.X
                            percentage = math.clamp(snap((MousePos-FramePos)/FrameSize, step), 0, 0.9)
                            Value = round((((options.max - options.min) / 0.9) * percentage) + options.min, options.float)
                            Value = math.clamp(Value, options.min, options.max)
                            sliderTextBox.Text, sliderBall.Position = Value, UDim2.new(percentage, 0, 0.5, 0)
                            options.callback(Value)
                        end
                    end)
                    
                    sliderTextBox.Focused:Connect(function()
                        TweenService:Create(sliderLabel, TweenInfo.new(0.06, Enum.EasingStyle.Quart, Enum.EasingDirection.In), {TextColor3 = Color3.fromRGB(234, 239, 246)}):Play()
                    end)
                    sliderTextBox.FocusLost:Connect(function(Enter)
                        TweenService:Create(sliderLabel, TweenInfo.new(0.06, Enum.EasingStyle.Quart, Enum.EasingDirection.In), {TextColor3 = Color3.fromRGB(157, 171, 182)}):Play()
                        if Enter and sliderTextBox.Text ~= "" then
                            local val = tonumber(sliderTextBox.Text)
                            if val then
                                if val > options.max then val, sliderTextBox.Text = options.max, tostring(options.max)
                                elseif val < options.min then val, sliderTextBox.Text = options.min, tostring(options.min) end
                                options.callback(val)
                            end
                        end
                    end)
                    Resize(25)
                end
                
                function elements:Dropdown(options)
                    if not options.text or not options.default or not options.list or not options.callback then Notify("Dropdown", "Missing arguments!") return end
                    local Dropdown = Instance.new("Frame", sectionFrame)
                    Dropdown.BackgroundTransparency, Dropdown.Size, Dropdown.ZIndex = 1, UDim2.new(0, 200, 0, 22), 2
                    buttoneffect({frame = Dropdown, entered = Dropdown})
                    
                    local dropdownLabel = Instance.new("TextLabel", Dropdown)
                    dropdownLabel.BackgroundTransparency, dropdownLabel.Size, dropdownLabel.Font, dropdownLabel.Text, dropdownLabel.TextColor3, dropdownLabel.TextSize, dropdownLabel.TextXAlignment, dropdownLabel.TextWrapped = 1, UDim2.new(0, 105, 0, 22), Enum.Font.Gotham, " " .. options.text, Color3.fromRGB(157, 171, 182), 14, Enum.TextXAlignment.Left, true
                    
                    local dropdownText = Instance.new("TextLabel", dropdownLabel)
                    dropdownText.BackgroundColor3, dropdownText.Position, dropdownText.Size, dropdownText.Font, dropdownText.Text, dropdownText.TextColor3, dropdownText.TextSize, dropdownText.TextXAlignment, dropdownText.TextWrapped = Color3.fromRGB(2, 5, 12), UDim2.new(1.08571434, 0, 0.0909090936, 0), UDim2.new(0, 87, 0, 18), Enum.Font.Gotham, " " .. options.default, Color3.fromRGB(234, 239, 245), 12, Enum.TextXAlignment.Left, true
                    
                    local dropdownArrow = Instance.new("ImageButton", dropdownText)
                    dropdownArrow.BackgroundColor3, dropdownArrow.BorderSizePixel, dropdownArrow.Position, dropdownArrow.Size, dropdownArrow.AutoButtonColor, dropdownArrow.Image, dropdownArrow.ImageColor3 = Color3.fromRGB(2, 5, 12), 0, UDim2.new(0.87356323, 0, 0.138888866, 0), UDim2.new(0, 11, 0, 13), false, "rbxassetid://8008296380", Color3.fromRGB(157, 171, 182)
                    
                    local dropdownList = Instance.new("Frame", dropdownText)
                    dropdownList.BackgroundColor3, dropdownList.Position, dropdownList.Size, dropdownList.ClipsDescendants, dropdownList.BorderSizePixel, dropdownList.ZIndex = Color3.fromRGB(2, 5, 12), UDim2.new(0, 0, 1, 0), UDim2.new(0, 87, 0, 0), true, 0, 10
                    Instance.new("UIListLayout", dropdownList).SortOrder = Enum.SortOrder.LayoutOrder
                    
                    local DropYSize, Dropped = 0, false
                    dropdownArrow.MouseButton1Click:Connect(function()
                        Dropped = not Dropped
                        local tweenInfo = TweenInfo.new(0.06, Enum.EasingStyle.Quad, Enum.EasingDirection.In)
                        TweenService:Create(dropdownLabel, tweenInfo, {TextColor3 = Dropped and Color3.fromRGB(234, 239, 246) or Color3.fromRGB(157, 171, 182)}):Play()
                        TweenService:Create(dropdownList, tweenInfo, {Size = Dropped and UDim2.new(0, 87, 0, DropYSize) or UDim2.new(0, 87, 0, 0), BorderSizePixel = Dropped and 1 or 0}):Play()
                    end)
                    
                    for _, v in next, options.list do
                        local dropdownBtn = Instance.new("TextButton", dropdownList)
                        dropdownBtn.BackgroundTransparency, dropdownBtn.BorderSizePixel, dropdownBtn.Size, dropdownBtn.AutoButtonColor, dropdownBtn.Font, dropdownBtn.TextColor3, dropdownBtn.TextSize, dropdownBtn.Text, dropdownBtn.ZIndex = 1, 0, UDim2.new(0, 87, 0, 18), false, Enum.Font.Gotham, Color3.fromRGB(234, 239, 245), 12, v, 15
                        clickEffect({button = dropdownBtn, amount = 5})
                        dropdownBtn.MouseButton1Click:Connect(function() dropdownText.Text, options.callback(v) = " " .. v end)
                        DropYSize = DropYSize + 18
                    end
                    Resize(25)
                end
                
                function elements:Textbox(options)
                    if not options.text or not options.value or not options.callback then Notify("Textbox", "Missing arguments!") return end
                    local Textbox = Instance.new("Frame", sectionFrame)
                    Textbox.BackgroundTransparency, Textbox.Size = 1, UDim2.new(0, 200, 0, 22)
                    buttoneffect({frame = Textbox, entered = Textbox})
                    
                    local textBoxLabel = Instance.new("TextLabel", Textbox)
                    textBoxLabel.AnchorPoint, textBoxLabel.BackgroundTransparency, textBoxLabel.Position, textBoxLabel.Size, textBoxLabel.Font, textBoxLabel.Text, textBoxLabel.TextColor3, textBoxLabel.TextSize, textBoxLabel.TextXAlignment = Vector2.new(0.5, 0.5), 1, UDim2.new(0.237, 0, 0.5, 0), UDim2.new(0, 99, 0, 22), Enum.Font.Gotham, "  " .. options.text, Color3.fromRGB(157, 171, 182), 14, Enum.TextXAlignment.Left
                    
                    local textBox = Instance.new("TextBox", Textbox)
                    textBox.AnchorPoint, textBox.BackgroundColor3, textBox.Position, textBox.Size, textBox.Font, textBox.Text, textBox.TextColor3, textBox.TextSize, textBox.TextWrapped = Vector2.new(0.5, 0.5), Color3.fromRGB(1, 7, 17), UDim2.new(0.85, 0, 0.5, 0), UDim2.new(0, 53, 0, 15), Enum.Font.Gotham, options.value, Color3.fromRGB(234, 239, 245), 11, true
                    
                    textBox.Focused:Connect(function()
                        TweenService:Create(textBoxLabel, TweenInfo.new(0.06, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {TextColor3 = Color3.fromRGB(234, 239, 246)}):Play()
                    end)
                    textBox.FocusLost:Connect(function(Enter)
                        TweenService:Create(textBoxLabel, TweenInfo.new(0.06, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {TextColor3 = Color3.fromRGB(157, 171, 182)}):Play()
                        if Enter and textBox.Text ~= "" then options.callback(textBox.Text) end
                    end)
                    Resize(25)
                end
                
                function elements:Colorpicker(options)
                    if not options.text or not options.color or not options.callback then Notify("Colorpicker", "Missing arguments!") return end
                    local hue, sat, val = Color3.toHSV(options.color)
                    local Colorpicker = Instance.new("Frame", sectionFrame)
                    Colorpicker.BackgroundTransparency, Colorpicker.Size, Colorpicker.ZIndex = 1, UDim2.new(0, 200, 0, 22), 2
                    buttoneffect({frame = Colorpicker, entered = Colorpicker})
                    
                    local colorpickerLabel = Instance.new("TextLabel", Colorpicker)
                    colorpickerLabel.AnchorPoint, colorpickerLabel.BackgroundTransparency, colorpickerLabel.Position, colorpickerLabel.Size, colorpickerLabel.Font, colorpickerLabel.Text, colorpickerLabel.TextColor3, colorpickerLabel.TextSize, colorpickerLabel.TextXAlignment = Vector2.new(0.5, 0.5), 1, UDim2.new(0.5, 0, 0.5, 0), UDim2.new(0, 200, 0, 22), Enum.Font.Gotham, " " .. options.text, Color3.fromRGB(157, 171, 182), 14, Enum.TextXAlignment.Left
                    
                    local colorpickerButton = Instance.new("ImageButton", colorpickerLabel)
                    colorpickerButton.AnchorPoint, colorpickerButton.BackgroundTransparency, colorpickerButton.Position, colorpickerButton.Size, colorpickerButton.Image = Vector2.new(0.5, 0.5), 1, UDim2.new(0.92, 0, 0.57, 0), UDim2.new(0, 15, 0, 15), "rbxassetid://8023491332"
                    
                    local colorpickerFrame = Instance.new("Frame", Colorpicker)
                    colorpickerFrame.Visible, colorpickerFrame.BackgroundColor3, colorpickerFrame.Position, colorpickerFrame.Size, colorpickerFrame.ZIndex = false, Color3.fromRGB(0, 10, 21), UDim2.new(1.15, 0, 0.5, 0), UDim2.new(0, 251, 0, 221), 15
                    Dragify(colorpickerFrame, Colorpicker)
                    
                    local RGB = Instance.new("ImageButton", colorpickerFrame)
                    RGB.BackgroundTransparency, RGB.Position, RGB.Size, RGB.AutoButtonColor, RGB.Image, RGB.ZIndex = 1, UDim2.new(0.067, 0, 0.068, 0), UDim2.new(0, 179, 0, 161), false, "rbxassetid://6523286724", 16
                    
                    local RGBCircle = Instance.new("ImageLabel", RGB)
                    RGBCircle.BackgroundTransparency, RGBCircle.Size, RGBCircle.Image, RGBCircle.ImageRectOffset, RGBCircle.ImageRectSize, RGBCircle.ZIndex = 1, UDim2.new(0, 14, 0, 14), "rbxassetid://3926309567", Vector2.new(628, 420), Vector2.new(48, 48), 16
                    
                    local Darkness = Instance.new("ImageButton", colorpickerFrame)
                    Darkness.BackgroundTransparency, Darkness.Position, Darkness.Size, Darkness.AutoButtonColor, Darkness.Image, Darkness.ZIndex = 1, UDim2.new(0.831940293, 0, 0.068, 0), UDim2.new(0, 33, 0, 161), false, "rbxassetid://156579757", 16
                    
                    local DarknessCircle = Instance.new("Frame", Darkness)
                    DarknessCircle.Position, DarknessCircle.Size, DarknessCircle.ZIndex = UDim2.new(0, 0, 0, 0), UDim2.new(0, 33, 0, 5), 16
                    
                    local colorHex = Instance.new("TextLabel", colorpickerFrame)
                    colorHex.BackgroundColor3, colorHex.Position, colorHex.Size, colorHex.Font, colorHex.Text, colorHex.TextColor3, colorHex.TextSize, colorHex.ZIndex = Color3.fromRGB(9, 8, 13), UDim2.new(0.0717131495, 0, 0.850678742, 0), UDim2.new(0, 94, 0, 24), Enum.Font.GothamSemibold, "#FFFFFF", Color3.fromRGB(234, 239, 245), 14, 16
                    
                    local Copy = Instance.new("TextButton", colorpickerFrame)
                    Copy.BackgroundColor3, Copy.Position, Copy.Size, Copy.AutoButtonColor, Copy.Font, Copy.Text, Copy.TextColor3, Copy.TextSize, Copy.ZIndex = Color3.fromRGB(9, 8, 13), UDim2.new(0.72111553, 0, 0.850678742, 0), UDim2.new(0, 60, 0, 24), false, Enum.Font.GothamSemibold, "Copy", Color3.fromRGB(234, 239, 245), 14, 16
                    Copy.MouseButton1Click:Connect(function()
                        if setclipboard then
                            setclipboard(colorHex.Text)
                            Notify("Cryptweb:", colorHex.Text .. " Done!")
                        else
                            print(colorHex.Text)
                            Notify("Cryptweb:", colorHex.Text .. " Printed due to no setclipboard support.")
                        end
                    end)
                    
                    local vis, WheelDown, SlideDown, color = false, false, false, {1, 1, 1}
                    local function to_hex(c) return string.format("#%02X%02X%02X", c.R * 255, c.G * 255, c.B * 255) end
                    local function update()
                        local c = Color3.fromHSV(color[1], color[2], color[3])
                        colorHex.Text = to_hex(c)
                    end
                    
                    local function UpdateSlide()
                        local ml = Mouse
                        local y = math.clamp(ml.Y - Darkness.AbsolutePosition.Y, 0, Darkness.AbsoluteSize.Y) / Darkness.AbsoluteSize.Y
                        color = {color[1], color[2], 1 - y}
                        local realcolor = Color3.fromHSV(color[1], color[2], color[3])
                        DarknessCircle.BackgroundColor3, DarknessCircle.Position = realcolor, UDim2.new(0, 0, y, -DarknessCircle.AbsoluteSize.Y/2)
                        options.callback(realcolor)
                        update()
                    end
                    
                    local function UpdateRing()
                        local ml = Mouse
                        local x, y = math.clamp(ml.X - RGB.AbsolutePosition.X, 0, RGB.AbsoluteSize.X) / RGB.AbsoluteSize.X, math.clamp(ml.Y - RGB.AbsolutePosition.Y, 0, RGB.AbsoluteSize.Y) / RGB.AbsoluteSize.Y
                        RGBCircle.Position = UDim2.new(x, -RGBCircle.AbsoluteSize.X/2, y, -RGBCircle.AbsoluteSize.Y/2)
                        color = {1 - x, 1 - y, color[3]}
                        local realcolor = Color3.fromHSV(color[1], color[2], color[3])
                        Darkness.BackgroundColor3, DarknessCircle.BackgroundColor3 = realcolor, realcolor
                        options.callback(realcolor)
                        update()
                    end
                    
                    colorpickerButton.MouseButton1Click:Connect(function()
                        vis = not vis
                        colorpickerFrame.Visible = vis
                        TweenService:Create(colorpickerLabel, TweenInfo.new(0.06, Enum.EasingStyle.Quart, Enum.EasingDirection.InOut), {TextColor3 = vis and Color3.fromRGB(234, 239, 246) or Color3.fromRGB(157, 171, 182)}):Play()
                    end)
                    
                    RGB.MouseButton1Down:Connect(function() WheelDown = true UpdateRing() end)
                    Darkness.MouseButton1Down:Connect(function() SlideDown = true UpdateSlide() end)
                    InputService.InputEnded:Connect(function(input)
                        if input.UserInputType == Enum.UserInputType.MouseButton1 then WheelDown, SlideDown = false, false end
                    end)
                    RGB.MouseMoved:Connect(function() if WheelDown then UpdateRing() end end)
                    Darkness.MouseMoved:Connect(function() if SlideDown then UpdateSlide() end end)
                    
                    local function setcolor(tbl)
                        local realcolor = Color3.fromHSV(tbl[1], tbl[2], tbl[3])
                        colorHex.Text, DarknessCircle.BackgroundColor3 = to_hex(realcolor), realcolor
                    end
                    setcolor({hue, sat, val})
                    Resize(25)
                end
                
                function elements:Keybind(options)
                    if not options.text or not options.default or not options.callback then Notify("Keybind", "Missing arguments") return end
                    local blacklisted = {Return = true, Space = true, Tab = true, W = true, A = true, S = true, D = true, I = true, O = true, Unknown = true}
                    local short = {RightControl = "RCtrl", LeftControl = "LCtrl", LeftShift = "LShift", RightShift = "RShift", MouseButton1 = "M1", MouseButton2 = "M2", LeftAlt = "LAlt", RightAlt = "RAlt"}
                    local oldKey = options.default.Name
                    
                    local Keybind = Instance.new("Frame", sectionFrame)
                    Keybind.BackgroundTransparency, Keybind.Size, Keybind.ZIndex = 1, UDim2.new(0, 200, 0, 22), 2
                    buttoneffect({frame = Keybind, entered = Keybind})
                    
                    local keybindButton = Instance.new("TextButton", Keybind)
                    keybindButton.AnchorPoint, keybindButton.BackgroundTransparency, keybindButton.Position, keybindButton.Size, keybindButton.AutoButtonColor, keybindButton.Font, keybindButton.Text, keybindButton.TextColor3, keybindButton.TextSize, keybindButton.TextXAlignment = Vector2.new(0.5, 0.5), 1, UDim2.new(0.5, 0, 0.5, 0), UDim2.new(0, 200, 0, 22), false, Enum.Font.Gotham, " " .. options.text, Color3.fromRGB(157, 171, 182), 14, Enum.TextXAlignment.Left
                    
                    local keybindLabel = Instance.new("TextLabel", keybindButton)
                    keybindLabel.AnchorPoint, keybindLabel.BackgroundTransparency, keybindLabel.Position, keybindLabel.Size, keybindLabel.Font, keybindLabel.Text, keybindLabel.TextColor3, keybindLabel.TextSize, keybindLabel.TextXAlignment = Vector2.new(0.5, 0.5), 1, UDim2.new(0.91, 0, 0.5, 0), UDim2.new(0, 36, 0, 22), Enum.Font.Gotham, oldKey .. " ", Color3.fromRGB(157, 171, 182), 14, Enum.TextXAlignment.Right
                    
                    keybindButton.MouseButton1Click:Connect(function()
                        keybindLabel.Text = "... "
                        TweenService:Create(keybindButton, TweenInfo.new(0.06, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {TextColor3 = Color3.fromRGB(234, 239, 246)}):Play()
                        TweenService:Create(keybindLabel, TweenInfo.new(0.06, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {TextColor3 = Color3.fromRGB(234, 239, 246)}):Play()
                        local input = InputService.InputBegan:Wait()
                        local newKey = input.KeyCode.Name
                        TweenService:Create(keybindLabel, TweenInfo.new(0.06, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {TextColor3 = Color3.fromRGB(157, 171, 182)}):Play()
                        TweenService:Create(keybindButton, TweenInfo.new(0.06, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {TextColor3 = Color3.fromRGB(157, 171, 182)}):Play()
                        if not blacklisted[newKey] then
                            keybindLabel.Text = short[newKey] or newKey
                            oldKey = newKey
                        else
                            keybindLabel.Text = short[oldKey] or oldKey
                        end
                    end)
                    
                    InputService.InputBegan:Connect(function(key, focused)
                        if not focused and key.KeyCode.Name == oldKey then options.callback(oldKey) end
                    end)
                    Resize(25)
                end
                
                return elements
            end
            return sections
        end
        return tabs
    end
    return tabsections
end

return Library

