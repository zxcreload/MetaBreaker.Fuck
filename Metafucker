-- Load the main Obsidian UI Library
local success, Library = pcall(function()
    return loadstring(game:HttpGet("https://raw.githubusercontent.com/deividcomsono/Obsidian/refs/heads/main/Library.lua"))()
end)
if not success then
    error("Failed to load Obsidian UI Library: " .. tostring(Library))
end

-- Load SaveManager and ThemeManager with error handling
local SaveManager, ThemeManager
local successSave, saveErr = pcall(function()
    SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/deividcomsono/Obsidian/refs/heads/main/addons/SaveManager.lua"))()
end)
if not successSave then
    warn("Failed to load SaveManager: " .. tostring(saveErr))
    SaveManager = nil
end

local successTheme, themeErr = pcall(function()
    ThemeManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/deividcomsono/Obsidian/refs/heads/main/addons/ThemeManager.lua"))()
end)
if not successTheme then
    warn("Failed to load ThemeManager: " .. tostring(themeErr))
    ThemeManager = nil
end

-- Disable custom cursor
Library.ShowCustomCursor = false

-- Create the main window
local Window = Library:CreateWindow({
    Title = "metaBreaker.lua",
    Footer = "2hollisSucks",
    Center = true,
    AutoShow = true,
    ToggleKeybind = Enum.KeyCode.RightControl,
    ShowCustomCursor = false,
})

-- Create Tabs
local CombatTab = Window:AddTab("Combat", "sword")
local VisualsTab = Window:AddTab("Visuals", "eye")
local MovementTab = Window:AddTab("Movement", "move")
local MiscTab = Window:AddTab("Misc", "list")
local TargetTab = Window:AddTab("Target", "target")
local ConfigTab = Window:AddTab("Config", "settings")

-- Initialize SaveManager if loaded
if SaveManager then
    SaveManager:SetLibrary(Library) -- Link SaveManager to the Library
    SaveManager:IgnoreThemeSettings() -- Prevent saving theme settings (optional)
    SaveManager:SetFolder("metaBreakerConfigs") -- Set the folder for config files
    SaveManager:SetSubFolder("settings") -- Optional: Organize configs in a subfolder
else
    Library:Notify({
        Title = "Error",
        Description = "SaveManager failed to load. Config saving/loading will not work.",
        Time = 5
    })
end

-- Initialize ThemeManager if loaded
if ThemeManager then
    ThemeManager:SetLibrary(Library) -- Link ThemeManager to the Library
    ThemeManager:SetFolder("metaBreakerThemes") -- Set the folder for theme files
else
    Library:Notify({
        Title = "Error",
        Description = "ThemeManager failed to load. Theme switching will not work.",
        Time = 5
    })
end

-- Build Configuration Section in Config Tab
-- Pass the ConfigTab (a tab) instead of ConfigGroupbox (a groupbox)
if SaveManager then
    SaveManager:BuildConfigSection(ConfigTab)
end

-- Add ThemeManager UI elements (Theme selection) to the ConfigTab
if ThemeManager then
    ThemeManager:ApplyToTab(ConfigTab)
end


-- Register UI elements with SaveManager and load autoload config
if SaveManager then
    SaveManager:LoadAutoloadConfig() -- Load the last saved config on startup (optional)
end

-- Notify user that the UI is loaded
Library:Notify({
    Title = "metaBreaker.lua",
    Description = "UI Loaded Successfully!",
    Time = 3
})

-- Show the UI
Library:Toggle(true)
